{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\ReduxBlog\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport AppRouter from './routers/AppRouter';\nimport { v4 as uuid } from 'uuid'; // Action creator\n\nconst addBlog = ({\n  title = \"\",\n  description = \"\",\n  dateAdded = 0\n}) => ({\n  type: \"ADD_BLOG\",\n  blog: {\n    id: uuid(),\n    title: title,\n    description: description,\n    dateAdded: dateAdded\n  }\n});\n\nconst removeBlog = ({\n  id\n}) => ({\n  type: \"REMOVE_BLOG\",\n  id: id\n});\n\nconst editBlog = (id, updates) => ({\n  type: \"EDIT_BLOG\",\n  id,\n  updates\n});\n\nconst blogState = [];\n\nconst blogsReducer = (state = blogState, action) => {\n  switch (action.type) {\n    case \"ADD_BLOG\":\n      return [...state, action.blog];\n\n    case \"REMOVE_BLOG\":\n      return state.filter(({\n        id\n      }) => {\n        return id !== action.id;\n      });\n\n    case \"EDIT_BLOG\":\n      return state.map(blog => {\n        if (blog.id === action.id) {\n          return { ...blog,\n            ...action.updates\n          };\n        } else {\n          return blog;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst authState = {};\n\nconst authReducer = (state = authState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(combineReducers({\n  blogs: blogsReducer,\n  auth: authReducer\n}));\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nconst blog1 = store.dispatch(addBlog({\n  title: \"b1\",\n  description: \"desc1\"\n}));\nconst blog2 = store.dispatch(addBlog({\n  title: \"b2\",\n  description: \"desc2\",\n  dateAdded: Date.now()\n}));\nstore.dispatch(removeBlog({\n  id: blog1.blog.id\n}));\nstore.dispatch(editBlog(blog2.blog.id, {\n  title: 'update'\n}));\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Hasan/Desktop/ReduxBlog/src/index.js"],"names":["React","ReactDOM","createStore","combineReducers","AppRouter","v4","uuid","addBlog","title","description","dateAdded","type","blog","id","removeBlog","editBlog","updates","blogState","blogsReducer","state","action","filter","map","authState","authReducer","store","blogs","auth","subscribe","console","log","getState","blog1","dispatch","blog2","Date","now","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB,C,CAIA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAK,GAAC,EAAP;AAAWC,EAAAA,WAAW,GAAC,EAAvB;AAA0BC,EAAAA,SAAS,GAAC;AAApC,CAAD,MAA2C;AACvDC,EAAAA,IAAI,EAAE,UADiD;AAEvDC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAEP,IAAI,EADN;AAEFE,IAAAA,KAAK,EAAEA,KAFL;AAGFC,IAAAA,WAAW,EAAEA,WAHX;AAIFC,IAAAA,SAAS,EAAEA;AAJT;AAFiD,CAA3C,CAAhB;;AAUA,MAAMI,UAAU,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,MACf;AACIF,EAAAA,IAAI,EAAC,aADT;AAEIE,EAAAA,EAAE,EAAEA;AAFR,CADe,CAAnB;;AAOA,MAAME,QAAQ,GAAG,CAACF,EAAD,EAAIG,OAAJ,MAAiB;AAClCL,EAAAA,IAAI,EAAE,WAD4B;AAElCE,EAAAA,EAFkC;AAGlCG,EAAAA;AAHkC,CAAjB,CAAjB;;AAMA,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAMC,YAAY,GAAI,CAACC,KAAK,GAAGF,SAAT,EAAoBG,MAApB,KAA8B;AAChD,UAAOA,MAAM,CAACT,IAAd;AACI,SAAK,UAAL;AACI,aAAO,CACH,GAAGQ,KADA,EAEHC,MAAM,CAACR,IAFJ,CAAP;;AAIA,SAAK,aAAL;AACA,aAAOO,KAAK,CAACE,MAAN,CAAa,CAAC;AAACR,QAAAA;AAAD,OAAD,KAAQ;AACxB,eAAOA,EAAE,KAAKO,MAAM,CAACP,EAArB;AACH,OAFM,CAAP;;AAGA,SAAK,WAAL;AACI,aAAOM,KAAK,CAACG,GAAN,CAAWV,IAAD,IAAW;AACxB,YAAGA,IAAI,CAACC,EAAL,KAAYO,MAAM,CAACP,EAAtB,EAAyB;AACrB,iBAAM,EACF,GAAGD,IADD;AAEF,eAAGQ,MAAM,CAACJ;AAFR,WAAN;AAIH,SALD,MAKK;AACD,iBAAOJ,IAAP;AACH;AAEJ,OAVM,CAAP;;AAWR;AACI,aAAOO,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,MAAMI,SAAS,GAAG,EAAlB;;AAEA,MAAMC,WAAW,GAAG,CAACL,KAAK,GAAGI,SAAT,EAAoBH,MAApB,KAA8B;AAC9C,UAAOA,MAAM,CAACT,IAAd;AACI;AACI,aAAOQ,KAAP;AAFR;AAIH,CALD;;AASA,MAAMM,KAAK,GAAGvB,WAAW,CACrBC,eAAe,CAAC;AACZuB,EAAAA,KAAK,EAAER,YADK;AAEZS,EAAAA,IAAI,EAAEH;AAFM,CAAD,CADM,CAAzB;AAOAC,KAAK,CAACG,SAAN,CAAgB,MAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,QAAN,EAAZ;AACH,CAFD;AAKA,MAAMC,KAAK,GAAGP,KAAK,CAACQ,QAAN,CAAe1B,OAAO,CAAC;AAACC,EAAAA,KAAK,EAAC,IAAP;AAAYC,EAAAA,WAAW,EAAC;AAAxB,CAAD,CAAtB,CAAd;AACA,MAAMyB,KAAK,GAAGT,KAAK,CAACQ,QAAN,CAAe1B,OAAO,CAAC;AAACC,EAAAA,KAAK,EAAC,IAAP;AAAYC,EAAAA,WAAW,EAAC,OAAxB;AAAiCC,EAAAA,SAAS,EAAEyB,IAAI,CAACC,GAAL;AAA5C,CAAD,CAAtB,CAAd;AAGAX,KAAK,CAACQ,QAAN,CAAenB,UAAU,CAAC;AAACD,EAAAA,EAAE,EAAEmB,KAAK,CAACpB,IAAN,CAAWC;AAAhB,CAAD,CAAzB;AACAY,KAAK,CAACQ,QAAN,CAAelB,QAAQ,CAACmB,KAAK,CAACtB,IAAN,CAAWC,EAAZ,EAAgB;AAACL,EAAAA,KAAK,EAAE;AAAR,CAAhB,CAAvB;;AASA,MAAM6B,GAAG,GAAG,MAAI;AACZ,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAND;;AAUApC,QAAQ,CAACqC,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport AppRouter from './routers/AppRouter';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\n\r\n\r\n// Action creator\r\nconst addBlog = ({title=\"\" ,description=\"\",dateAdded=0})=>({\r\n    type: \"ADD_BLOG\",\r\n    blog: {\r\n        id: uuid(),\r\n        title: title,\r\n        description: description,\r\n        dateAdded: dateAdded\r\n    }\r\n});\r\n\r\nconst removeBlog = ({id})=>(\r\n    {\r\n        type:\"REMOVE_BLOG\",\r\n        id: id\r\n    }\r\n)\r\n\r\nconst editBlog = (id,updates) => ({\r\ntype: \"EDIT_BLOG\",\r\nid,\r\nupdates\r\n})\r\n\r\nconst blogState = []\r\n\r\nconst blogsReducer  = (state = blogState, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_BLOG\":\r\n            return [\r\n                ...state,\r\n                action.blog\r\n            ]\r\n            case \"REMOVE_BLOG\":\r\n            return state.filter(({id})=>{\r\n                return id !== action.id;\r\n            })\r\n            case \"EDIT_BLOG\":\r\n                return state.map((blog)=>   {\r\n                    if(blog.id === action.id){\r\n                        return{\r\n                            ...blog,\r\n                            ...action.updates\r\n                        }\r\n                    }else{\r\n                        return blog;\r\n                    }\r\n\r\n                })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst authState = {};\r\n\r\nconst authReducer = (state = authState, action) =>{\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        blogs: blogsReducer,\r\n        auth: authReducer\r\n    })\r\n)\r\n\r\nstore.subscribe(()=>{\r\n    console.log(store.getState());\r\n});\r\n\r\n\r\nconst blog1 = store.dispatch(addBlog({title:\"b1\",description:\"desc1\"}));\r\nconst blog2 = store.dispatch(addBlog({title:\"b2\",description:\"desc2\", dateAdded: Date.now()}));\r\n\r\n\r\nstore.dispatch(removeBlog({id: blog1.blog.id}))\r\nstore.dispatch(editBlog(blog2.blog.id, {title: 'update'}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = ()=>{\r\n    return(\r\n        <div>\r\n            <AppRouter />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"]},"metadata":{},"sourceType":"module"}